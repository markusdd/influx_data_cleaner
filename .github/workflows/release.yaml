name: Build and Release Cross-Platform Executables

on:
  push:
    branches:
      - main
    tags:
      - 'v*.*.*'

jobs:
  build-windows:
    runs-on: windows-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pyinstaller ttkbootstrap platformdirs influxdb darkdetect pywin32

    - name: Build with PyInstaller
      run: |
        pyinstaller --clean influx_data_cleaner.spec

    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: influx_data_cleaner-windows
        path: dist/influx_data_cleaner.exe

  build-macos:
    runs-on: macos-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'

    - name: Install dependencies
      run: |
        python3 -m pip install --upgrade pip
        pip3 install pyinstaller ttkbootstrap platformdirs influxdb darkdetect

    - name: Build with PyInstaller
      run: |
        pyinstaller --clean influx_data_cleaner.spec

    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: influx_data_cleaner-macos
        path: dist/influx_data_cleaner.app

  build-linux:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'

    - name: Install dependencies
      run: |
        python3 -m pip install --upgrade pip
        pip3 install pyinstaller ttkbootstrap platformdirs influxdb darkdetect

    - name: Build with PyInstaller
      run: |
        pyinstaller --clean influx_data_cleaner.spec

    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: influx_data_cleaner-linux
        path: dist/influx_data_cleaner

  release:
    needs: [build-windows, build-macos, build-linux]
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')

    steps:
    - name: Download artifacts
      uses: actions/download-artifact@v4
      with:
        path: artifacts

    - name: Display structure of downloaded files
      run: ls -R
      working-directory: artifacts

    - name: Debug macOS artifact structure
      run: ls -R
      working-directory: artifacts/influx_data_cleaner-macos

    - name: Organize files into platform folders
      run: |
        mkdir -p artifacts/windows
        mkdir -p artifacts/macos
        mkdir -p artifacts/linux
        mv artifacts/influx_data_cleaner-windows/influx_data_cleaner.exe artifacts/windows/
        mv artifacts/influx_data_cleaner-macos/ artifacts/macos/influx_data_cleaner.app
        mv artifacts/influx_data_cleaner-linux/influx_data_cleaner artifacts/linux/

    - name: Debug post-move structure
      run: ls -R
      working-directory: artifacts/macos

    - name: Zip macOS app bundle
      run: |
        cd artifacts/macos
        zip -r influx_data_cleaner_app.zip influx_data_cleaner.app

    - name: Create Release
      uses: softprops/action-gh-release@v2
      with:
        files: |
          artifacts/windows/influx_data_cleaner.exe
          artifacts/macos/influx_data_cleaner_app.zip
          artifacts/linux/influx_data_cleaner
        tag_name: ${{ github.ref }}
        name: Release ${{ github.ref }}
        draft: false
        prerelease: false